
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <script type="text/javascript" src="https://cdn.staticfile.org/touchjs/0.2.14/touch.min.js"></script>
  <script type="text/javascript" src="https://libs.baidu.com/jquery/1.9.0/jquery.min.js"></script>
  <script src="https://www.suyuanli.ink/example/mobile_drag/js/index.js"></script>
  <script src="https://cdn.bootcss.com/vConsole/3.3.4/vconsole.min.js"></script>


<script>
  // 初始化
  //var vConsole = new VConsole();
</script>

  <script type="text/javascript">
      if(/Android (\d+\.\d+)/.test(navigator.userAgent)){
          var version = parseFloat(RegExp.$1);
          if(version>2.3){
              var phoneScale = parseInt(window.screen.width)/750;
              document.write('<meta name="viewport" content="width=750, minimum-scale = '+ phoneScale +', maximum-scale = '+ phoneScale +', target-densitydpi=device-dpi">');
          }else{
              document.write('<meta name="viewport" content="width=750, target-densitydpi=device-dpi">');
          }
      }else{
          document.write('<meta name="viewport" content="width=750, user-scalable=no, target-densitydpi=device-dpi">');
      }
  </script>
  <script type="text/javascript">
  window.onload = function () {
    var canvasBox = document.querySelector('#picBox');
    var canvas = new _Canvas({
      box: canvasBox,                  // 容器
      bgColor: '#000',                // 背景色
      bgPhoto: 'none',                // 背景图
      photoModel: 'adaption',        // 载入图片模式(设置后添加图片时默认为当前设置模式)
      model: 'Cascade'                // 编辑模式
    })
    var timer;
    canvas.init({
      dragEvent: function (e1, e2) {
        clearTimeout(timer);
        $('.event').text('当前操作事件：正在拖拽');
        timer = setTimeout(function () {
          $('.event').text('当前操作事件：无操作');
        }, 10)
      },
      zoomEvent: function (e1, e2) {
        clearTimeout(timer);
        $('.event').text('当前操作事件：正在缩放');
        timer = setTimeout(function () {
          $('.event').text('当前操作事件：无操作');
        }, 10)
      },
      rotateEvent: function (e1, e2) {
        clearTimeout(timer);
        $('.event').text('当前操作事件：正在旋转');
        timer = setTimeout(function () {
          $('.event').text('当前操作事件：无操作');
        }, 10)
      },
      callback: function () {
        console.log('图片初始化完成...')
        canvas.addPhoto({
          url: './img/pic1.jpg',
          model: 'adaption',
          callback: function () {
            console.log('成功添加一张自适应的图片')
          }
        })
      }
    });
    // 添加或移除背景图
    var changeBgFlag = false;
    $('.changeBg').click(function () {
      if (!changeBgFlag) {
        canvas.changeBg({
          photo: './img/pic2.jpg'
        })
      } else {
        canvas.changeBg({
          photo: 'none'
        })
      }
      changeBgFlag = !changeBgFlag;
    })
    // 修改背景色
    $('.bgColor').click(function () {
      var color = 'rgba(255,255,255,0%)' ;
      canvas.changeBg({
        photo: 'none',
        color: color
      })
    })

    // 添加本地图片
    $('.file').change(function () {
      canvas.addPhoto({
        url: getUrl(this.files[0]),
        model: 200,
        callback: function () {
          console.log('成功添加本地图片')
        }
      })
    })

    // 获取当前图片信息
    $('.getPhotoInfo').click(function () {
      var nowPhoto = canvas.getNowPhoto();
      if (!nowPhoto) {
        alert('未选中任何图片');
        return;
      } else {
        var nowPhotoInfo = nowPhoto.getPhotoInfo();
        $('.photoInfo').val(JSON.stringify(nowPhotoInfo))
      }
    })

    // 旋转
    $('.rotate').click(function () {
      var nowPhoto = canvas.getNowPhoto();
      if (!nowPhoto) {
        alert('未选中任何图片');
        return;
      } else {
        var nowPhotoInfo = nowPhoto.getPhotoInfo();
        nowPhoto.changeInfo({
          rotate: nowPhotoInfo.rotate + 90,
          callback: function () {
            console.log('成功旋转')
          }
        })
      }
    })
    // 放大
    $('.enlarge').click(function () {
      var nowPhoto = canvas.getNowPhoto();
      if (!nowPhoto) {
        alert('未选中任何图片');
        return;
      } else {
        var nowPhotoInfo = nowPhoto.getPhotoInfo();
        nowPhoto.changeInfo({
          scale: nowPhotoInfo.scale * 1.1,
          callback: function () {
            console.log('成功放大')
          }
        })
      }
    })
    // 缩小
    $('.narrow').click(function () {
      var nowPhoto = canvas.getNowPhoto();
      if (!nowPhoto) {
        alert('未选中任何图片');
        return;
      } else {
        var nowPhotoInfo = nowPhoto.getPhotoInfo();
        nowPhoto.changeInfo({
          scale: nowPhotoInfo.scale / 1.1,
          callback: function () {
            console.log('成功缩小')
          }
        })
      }
    })

    // 重置
    $('.autoScale').click(function () {
      var nowPhoto = canvas.getNowPhoto();
      if (!nowPhoto) {
        alert('未选中任何图片');
        return;
      } else {
        var nowPhotoInfo = nowPhoto.getPhotoInfo();
        nowPhoto.init(function () {
          console.log('成功重置')
        })
      }
    })
    // 删除图片
    $('.deletePic').click(function () {
      var nowPhoto = canvas.getNowPhoto();
      if (!nowPhoto) {
        alert('未选中任何图片');
        return;
      } else {
        var nowPhotoInfo = nowPhoto.getPhotoInfo();
        nowPhoto._delete();
        console.log('成功重置')
      }
    })


    // 更改画布宽高
    $('.changeWH1').click(function () {
var w = prompt("输入宽度值","");
var h = prompt("输入高度值","");
      canvas.changeParams({
        width: w,
        height: h
      })
    })
    // 复原
    $('.changeWH2').click(function () {
      canvas.changeParams({
        width: 750,
        height: 600
      })
    })

    // 清空画布
    $('.clearCanvas').click(function () {
      canvas.clearCanvas();
    })



    // 输出png图
    $('.outputmodel').click(function () {
      canvas.toDataURL({
        width: 750,
        height: 600,
        type: 'image/png',
        callback: function (url) {
          $('.outputPic').attr('src', url);
          console.log('成功输出png图')
        }
      })
    })


    function getUrl (file) {
      var url = null;
      if (window.createObjectURL !== undefined) {
        url = window.createObjectURL(file);
      } else if (window.URL !== undefined) {
        url = window.URL.createObjectURL(file);
      } else if (window.webkitURL !== undefined) {
        url = window.webkitURL.createObjectURL(file);
      }
      return url
    }
  }
  </script>
  <title>dray</title>
  <style media="screen">
    * {margin: 0; padding: 0}
    #picBox {
      width: 100%;
      height: 600px;
      position: fixed;
      top: 0;
    }
    section {
      padding-top: 600px;
    }
    .set {
      font: 36px/50px "";
      margin-top: 20px;
    }
    button {
      font: 36px/50px "";
      margin-bottom: 10px;
    }
    .photoInfo {
      width: 100%;
      font: 24px/50px "";
    }
    .outputPic {
      display: block;
    }
    .event {
      font: 20px/40px "";
      color: #f00;
    }

  </style>
</head>
<body>
  <div id="picBox">

  </div>



  <section>
    <span>拖拽可缩放旋转；图片支持手势缩放旋转</span>

    <div class="set">
      <button class="changeBg">添加/移除背景</button>
      <button class="bgColor">更改背景色</button>
    </div>

    <div class="set">
      <label style="border: 1px #888 solid;">
        <input type="file" class="file" style="display: none;">
        添加本地图片
      </label>
    </div>

    <div class="set">
      <h3>更改画布宽高：</h3>
      <button class="changeWH1">定量</button>
      <button class="changeWH2">复原</button>
    </div>
    <div class="set">
<button class="clearCanvas">清空画布</button>
    </div>
    <div class="set">
      <h3>更改选中图片属性：</h3>
      <button class="getPhotoInfo">获取当前选中图片的位置信息</button>
      <p><input type="text" class="photoInfo"></p>


（先选中）
      <button class="rotate">旋转</button>
      <button class="enlarge">放大</button>
      <button class="narrow">缩小</button>
      <button class="autoScale">重置</button>
      <button class="deletePic">删除</button>
    </div>
    <div class="set">
      <button class="outputmodel">输出图片</button>

    </div>
    <img src="" alt="" class="outputPic" id="outputPic">
  </section>

<div id="textarea" class="t2" contenteditable="true" style="background:grey;width:800px;height:400px;">hhhhhhi
</div>


<button onclick="a()">添加图片</button>

<script type="text/javascript">
function a() {
var html=document.getElementById('outputPic').outerHTML;
//document.getElementById('textarea').innerHTML=html;
var content = window.getSelection().toString();
var sel, range;
    if (window.getSelection) {
        sel = window.getSelection();
        if (sel.getRangeAt && sel.rangeCount) {
            range = sel.getRangeAt(0);
            range.deleteContents();
            var el = document.createElement("div");
            el.innerHTML = html;
            var frag = document.createDocumentFragment(), node, lastNode;
            while ( (node = el.firstChild) ) {
                lastNode = frag.appendChild(node);
            }
            range.insertNode(frag);
            if (lastNode) {
                range = range.cloneRange();
                range.setStartAfter(lastNode);
                range.collapse(true);
                sel.removeAllRanges();
                sel.addRange(range);
            }
        }
    } else if (document.selection && document.selection.type != "Control") {     document.selection.createRange().pasteHTML(html);
    };
}
</script>





</body>
</html>
